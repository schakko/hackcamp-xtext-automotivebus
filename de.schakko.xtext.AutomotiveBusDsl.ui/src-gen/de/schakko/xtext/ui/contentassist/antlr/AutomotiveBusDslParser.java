/*
* generated by Xtext
*/
package de.schakko.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.schakko.xtext.services.AutomotiveBusDslGrammarAccess;

public class AutomotiveBusDslParser extends AbstractContentAssistParser {
	
	@Inject
	private AutomotiveBusDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.schakko.xtext.ui.contentassist.antlr.internal.InternalAutomotiveBusDslParser createParser() {
		de.schakko.xtext.ui.contentassist.antlr.internal.InternalAutomotiveBusDslParser result = new de.schakko.xtext.ui.contentassist.antlr.internal.InternalAutomotiveBusDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getMessageInstanceAccess().getAlternatives_5(), "rule__MessageInstance__Alternatives_5");
					put(grammarAccess.getMessageFieldTypeAccess().getAlternatives_0(), "rule__MessageFieldType__Alternatives_0");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_2(), "rule__Model__Group_2__0");
					put(grammarAccess.getVehicleTypeAccess().getGroup(), "rule__VehicleType__Group__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getComponentAccess().getGroup_1(), "rule__Component__Group_1__0");
					put(grammarAccess.getMessageTypeAccess().getGroup(), "rule__MessageType__Group__0");
					put(grammarAccess.getMessageInstanceAccess().getGroup(), "rule__MessageInstance__Group__0");
					put(grammarAccess.getMessageInstanceAccess().getGroup_2(), "rule__MessageInstance__Group_2__0");
					put(grammarAccess.getMessageInstanceAccess().getGroup_5_1(), "rule__MessageInstance__Group_5_1__0");
					put(grammarAccess.getMessageFieldTypeAccess().getGroup(), "rule__MessageFieldType__Group__0");
					put(grammarAccess.getModelAccess().getBussesAssignment_1(), "rule__Model__BussesAssignment_1");
					put(grammarAccess.getModelAccess().getBussesAssignment_2_1(), "rule__Model__BussesAssignment_2_1");
					put(grammarAccess.getModelAccess().getMessagesAssignment_5(), "rule__Model__MessagesAssignment_5");
					put(grammarAccess.getModelAccess().getComponentsAssignment_9(), "rule__Model__ComponentsAssignment_9");
					put(grammarAccess.getModelAccess().getVehiclesAssignment_13(), "rule__Model__VehiclesAssignment_13");
					put(grammarAccess.getVehicleTypeAccess().getNameAssignment_0(), "rule__VehicleType__NameAssignment_0");
					put(grammarAccess.getVehicleTypeAccess().getComponentsAssignment_3(), "rule__VehicleType__ComponentsAssignment_3");
					put(grammarAccess.getBussystemAccess().getNameAssignment(), "rule__Bussystem__NameAssignment");
					put(grammarAccess.getComponentAccess().getNameAssignment_0(), "rule__Component__NameAssignment_0");
					put(grammarAccess.getComponentAccess().getMessagesAssignment_1_2(), "rule__Component__MessagesAssignment_1_2");
					put(grammarAccess.getMessageTypeAccess().getNameAssignment_0(), "rule__MessageType__NameAssignment_0");
					put(grammarAccess.getMessageTypeAccess().getFieldsAssignment_3(), "rule__MessageType__FieldsAssignment_3");
					put(grammarAccess.getMessageInstanceAccess().getMessageAssignment_1(), "rule__MessageInstance__MessageAssignment_1");
					put(grammarAccess.getMessageInstanceAccess().getParamsAssignment_2_1(), "rule__MessageInstance__ParamsAssignment_2_1");
					put(grammarAccess.getMessageInstanceAccess().getBusAssignment_4(), "rule__MessageInstance__BusAssignment_4");
					put(grammarAccess.getMessageInstanceAccess().getTargetAssignment_5_1_1(), "rule__MessageInstance__TargetAssignment_5_1_1");
					put(grammarAccess.getMessageFieldTypeAccess().getNameAssignment_1(), "rule__MessageFieldType__NameAssignment_1");
					put(grammarAccess.getMessageFieldTypeAccess().getIsRequiredAssignment_2(), "rule__MessageFieldType__IsRequiredAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.schakko.xtext.ui.contentassist.antlr.internal.InternalAutomotiveBusDslParser typedParser = (de.schakko.xtext.ui.contentassist.antlr.internal.InternalAutomotiveBusDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AutomotiveBusDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AutomotiveBusDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
